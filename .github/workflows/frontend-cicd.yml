name: Frontend Deploy to EC2

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE_TAG_NAME: frontend-app

jobs:
  build-and-docker-push:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      # env 설정
      - name: Add env properties
        run: |
          touch ./.env
          echo "${{ secrets.ENV }}" > ./.env

      # Node.js 및 Nginx 설정
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      # 의존성 설치
      - name: Install dependencies  
        run: npm ci
        
      # 테스트
      - name: Run tests  
        run: npm test
        
      # 경고 제거
      - name: Build the application
        run:
          CI=false npm run build

      # Docker Image 빌드
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest

      # Docker Hub 로그인
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      # 이미지 푸시
      - name: Push the Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest

  deploy-to-ec2:
    needs: build-and-docker-push # 위의 build-and-docker-push 이 끝나고 실행
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            # 프론트엔드 포트 사용 컨테이너 중지 및 제거
            FRONTEND_CONTAINER_ID=$(sudo docker ps -q --filter "publish=80-80" --filter "publish=443-443")
            
            if [ ! -z "$FRONTEND_CONTAINER_ID" ]; then
              sudo docker compose down
              sudo docker rm $FRONTEND_CONTAINER_ID
            fi
          
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest
            sudo docker compose up -d
